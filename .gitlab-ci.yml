stages:
  - build
  - sync


build:node:18.16.0:
  stage: build
  # 使用作者构建的镜像，无需运行 apt-get update && apt-get install -y rpm，节省时间，避免网络影响
  image: xuxiaoweicomcn/node-rpm:18.16.0
  variables:
    # npm 缓存路径
    NPM_CONFIG_CACHE: $CI_PROJECT_DIR/.cache
    # electron 缓存路径
    ELECTRON_CACHE: $CI_PROJECT_DIR/.cache/electron/cache
    # electron-builder 缓存路径
    ELECTRON_BUILDER_CACHE: $CI_PROJECT_DIR/.cache/electron-builder/cache
  script:
    - node_version=`node -v`
    - echo ${node_version}
    - npm i
    # 准备打包的文件命名方式
    - echo 's/${productName}_${version}-${arch}.${ext}/${productName}_${version}-node-'"${node_version}"'-${arch}.${ext}/'
    # 修改为准备打包的文件命名方式
    - sed -i 's/${productName}_${version}-${arch}.${ext}/${productName}_${version}-node-'"${node_version}"'-${arch}.${ext}/' electron-builder.json5
    - npm run build
    - npm run electron:build
    - npm run electron:build:linux:deb
    # 使用作者构建的镜像，无需运行 apt-get update && apt-get install -y rpm，节省时间，避免网络影响
    # - apt-get update
    # - apt-get install -y rpm
    - npm run electron:build:linux:rpm
    - ls release
    - ls release/*.*.*
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - node_modules/
      - .cache/
  artifacts:
    name: "${CI_JOB_NAME}"
    paths:
      - release/**/**.rpm
      - release/**/**.deb
      - release/**/**.AppImage
      - release/**/**.tar.gz
      - release/**/**.tar.xz
  # https://docs.gitlab.com/ee/ci/yaml/index.html#rules
  # 极狐GitLab中文文档：https://docs.gitlab.cn/jh/ci/yaml/index.html#rules
  rules:
    # PR 到 main 分支时预执行
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"
    # PR 合并到 main 后执行、推送到 main 分支时
    - if: $CI_COMMIT_BRANCH == "main"


include:
  - /sync.yml
